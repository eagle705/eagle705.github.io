---
layout: post
title:  "회사생활 #4"
subtitle:   "챗봇개발하며 느낀 점"
categories: essay
tags: 회사생활
comments: true
---

챗봇 개발하면서 느낀점에 대해서 간략하게 적고자한다. 학교에 있을때도 어렴풋이 알고있던 것이지만, 누군가에게 도움이 되길 바라는 마음에서 정리해본다.   

### 연구용 챗봇 vs 서비스용 챗봇
학교에서 주로 쓰는 알고리즘은 거의다 지도학습 기반이다. 데이터도 이미 어느정도 정해졌기 때문에 클래스 수도 많지 않고 일정하다. 그러나 회사에서는 데이터도 별로 없고(~~결국 알바쓰는게 젤 속 편하다는~~) 클래스 수도 일정하면 좋겠지만 개발한 제품을 누가 쓰냐에 따라 달라질 수도 있다.

### 지도학습 기반에서 검색기반으로..? Why?!
사실 지도학습 알고리즘은 Cool하다. 최고다. 성능이 쭉쭉 올라간다. 그러나 이런 지도학습 알고리즘을 못쓰는 경우가 생기는 걸 경험으로 알게 되었다.    
예를 들면, 기존의 챗봇 빌더 시스템을 생각해보자. 챗봇 빌더는 intent 개수가 사용자가 정하기 나름이다. 그게 몇개에서 몇십개 혹은 몇백개까지도 될 수 있다. 이런 경우를 Classification 문제로 풀려고하면 Extreme MultiClassification 문제가 되고 이는 성능을 높이는게 매우 쉽지 않은 상황으로 바뀐다. ```먼저 학습할때 발생하는 데이터간의 imbalanced class 문제```도 확인해야되고, ```Extreme MultiClassification 자체가 성능이 그리 높지 않다```. 그리고 ```각 class에 해당하는 학습에 필요한 방대한 양의 데이터는 어떻게 모으고 입력할 것```인가?   
   
이에 대한 대안은 고민하다보면 결국 검색기반으로 치우게 된다. (~~만약 클래스가 적다면 굳이 이쪽으로 올 필요가 없지만 회사에서 하려고하는 서비스는 지금도 intent가 322개나 되었던..~~)
그래서 정말 어떻게 보면 이제는 진부하고 baseline으로 많이 사용되는 ```tf-idf``` 와 ```BM25```등의 알고리즘에 눈을 돌리게 된다.   

```tf-idf``` 의 경우는 딱 평타를 친다. semantic은 고려할 수 없고, 동의어 처리등은 못하지만 doc2vec같은 것에 비해선 score가 그래도 꽤 안정적으로 나온다(특히 서로 상관없는 쿼리와 문서의 경우에!). 그리고 score값도 cosine으로 인해 범위가 딱 주어진다(-1 <= score <= 1). 요즘 Elastic Search에서 주 검색엔진으로 채택되었다는 ````BM25````의 경우는 ```tf-idf``` 의 상위버전이라고도 볼 수가 있는데(~~학부때 그래도 다 구현해본게 뿌듯~~) 기본적으로 semantic등은 못 잡아내는건 같지만 대게 ranking 결과가 ```tf-idf```보단 더 좋다. 하지만 챗봇용으로 쓰기에 살짝 애매한게 있는데 그건, score값이 범위화 되어있지 않다는 것! Threshold를 적용하기에 애매해서 이 부분에 대해서는 좀 더 고려가 필요하다.   

### 그럼 intent가 많을 때 지도학습은 어디다 쓰냐
여러가지 방법이 있을 수 있는데, Classifier를 hierarchical하게 배치해서 중요한 business logic을 분류하는 방법이나, 감성분석등에 쓸수있다. 혹은 위의 검색기반을 좀 더 Upgrade하는데 쓸수 있는데, STS와 few-shot learning 등에 적용할 수 있다. 그러나 테스트 결과 STS를 통해 뭔가 ranking하는건 softmax score의 값이 분류를 잘하는 모델이라고 높다는 보장은 없기에 문제가 있고, few-shot learning 쪽에서 요즘 화두가 되었던 Matching Network등이 꽤 고려해볼만 하다. (각 input의 embedding을 분류기를 통해 학습 후, 학습된 embedding에 대한 cosine유사도 값에 대한 attention 값을 input label과 output label의 regression에 사용하자 라는게 본 논문의 아이디어다.)


### 앞으로
챗봇 개발에 있어서 -_ -;; 빌더 형태로 서비스할 경우 의외로 이런 few-shot learning이나 similarity 문제가 매우 중요해진다. 라벨링된 데이터 확보도 중요하고.. 이 부분에 대해서 고도화하기 위해선 intent 입력, 유사도 학습, 엔티티 추출, 형태소분석기기 사전에 단어추가 등에 대해서 개선해나가야 할 것으로 보인다.   