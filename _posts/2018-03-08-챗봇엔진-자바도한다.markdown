---
layout: post
title:  "회사생활 #2"
subtitle:   "오랜만에 Java로 (+DL4J 후기)"
categories: essay
tags: 회사생활
comments: true
---

회사에 오면 학교와 가장 먼저 다른점은 ```서비스의 성능과 안정성```에 대한 부분이 다르다. 파이썬과 같이 멋진 언어는 인터프리터기반이고 컴파일해도 타입 유추가 어렵기 때문에 사실 느린편이다. 그에 반해 Java는 Spring이라는 정부가 미는 프레임워크+안정성 때문에 계속 사용되고 있다. 챗봇 프로젝트를 하면서 이 때문에 DL4J라는 걸 통해서 Java기반으로 서비스를 하려고 하는데 덕분에 클래스도 쭉 오랜만에 다시 짜보고 재밌긴 했다. 예전에는 주 언어를 Java와 JavaScript로 가려고 했으니깐 쫌 해보니 감도 찾고 나쁘진않았다. (~~그래도 여전히 답답하다는..~~)    
그러나 며칠 써보니 DL4J의 문제점은 명확했다. API 자체가 너무 high level이라서 유연하지 못하다. NLP 경우 전처리를 iterator쪽에 넣어주면 걔가 다해주는 형태인데 (PyTorch로 치면 dataloader라고 보면 됨), 만약 전처리 부분이나 input 개수등을 변경하려면 다 커스타미이징 해줘야하는데 쉽지않다.. 예를 들어 STS같이 input이 2개 들어가는 애들은 Computational Graph 셋팅 할땐 지원하나 iterator API가 별로 없어서 사실상 쓰기 애매한 상황이 발생한다.   
정리하면, DL4J 같은 프레임워크는 되게 간단한 DeepLearning 문제를 푸는데 Java로 풀어야할 때 쓰기에 적합하다. 간단한 태스크는 지원하는 편이고 전처리도 별로 안해줘도 알아서 해주니 편한 부분이 있긴하다. Gitter channel도 매우 활발히 지원해줘서 그냥 물어보면 몇시간 후에 SkyMind 직원이 친절하게 답변해준다. 이 부분은 다른 프레임워크에 비해 압도적인듯!!   
그러나, Computational Graph가 꽤 복잡해지기 시작하면 다른 솔루션을 알아보는게 좋다. Attention이나 이런것도 아직 지원안하기 때문에.. NLP쪽은 아직까진 꽤 문제가 있다고 할 수 있다. (0.9버전 기준) 이 부분에 대해 고려하고 적절한 프레임워크를 선택하는 걸 추천한다.
